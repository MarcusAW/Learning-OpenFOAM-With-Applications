/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

vertices
(
    (20 0.0 0) //0
    (120 0.0 0) //1
    (0.0 1 0) //2
    (20 1 0) //3 
    (120 1 0) //21
    (0.0 2 0) //5 
    (20 2 0) //6
    (120 2 0) //7
 
    (20 0.0 0.05) //8
    (120 0.0 0.05) //9
    (0.0 1 0.05) //10
    (20 1 0.05) //11
    (120 1 0.05) //12
    (0.0 2 0.05) //13
    (20 2 0.05) //14
    (120 2 0.05) //15
    
    (320 0 0)
    (320 2 0)
    (320 0 0.05)
    (320 2 0.05)
    
    
);
 
blocks
(
    hex (0 1 4 3 8 9 12 11) (2500 50 1) simpleGrading (1 1 1) //0
    hex (2 3 6 5 10 11 14 13) (500 50 1) simpleGrading (1 1 1) //1
    hex (3 4 7 6 11 12 15 14) (2500 50 1) simpleGrading (1 1 1) //2
    hex (1 16 17 7 9 18 19 15) (1250 100 1) simpleGrading (1 1 1)
);
 
edges
(
);
 
boundary
(
    walls
    {
        type wall;
        faces
        (
            (6 5 13 14) 
            (7 6 14 15) 
            (2 3 11 10) 
            (0 1 9 8) 
            (3 0 8 11) 
            (1 16 18 9)
            (17 7 15 19)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (5 2 10 13) 
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (16 17 19 18)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (3 2 5 6)
            (4 3 6 7)
            (1 0 3 4)
            (16 1 7 17)
 
            (11 14 13 10)
            (12 15 14 11)
            (9 12 11 8)
            (18 19 15 9)
        );
    }
    middleUpstream
    {
        type wall;
        faces
        (
            (1 4 12 9)
            (4 7 15 12)
        );
    }
    middleDownstream
    {
        type wall;
        faces
        (
            (1 7 15 9)
        );
    }
);
 
mergePatchPairs
(
    (middleDownstream middleUpstream)
);


// ************************************************************************* //
